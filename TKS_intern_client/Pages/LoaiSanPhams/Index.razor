@page "/loaisanpham"
@using TKS_intern_client.Services
@using TKS_intern_shared.ViewModels.LoaiSanPhams
@inject ApiClient Api
@inject NavigationManager Navigation
@inject IJSRuntime JS

<PageTitle>Loại Sản Phẩm</PageTitle>

<Breadcrumb>
    <BreadcrumbItem Href="/">Home</BreadcrumbItem>
    <BreadcrumbItem>Loại Sản Phẩm</BreadcrumbItem>
</Breadcrumb>

<Title Level="3">Danh sách Loại Sản Phẩm</Title>

<a href="/loaisanpham/create">
    <AntDesign.Button Type="ButtonType.Primary" class="mb-3">
        Thêm mới
    </AntDesign.Button>
</a>

@if (loaiSanPhams == null)
{
    <Spin Tip="Đang tải dữ liệu..." />
}
else if (!loaiSanPhams.Any())
{
    <Empty>
        <DescriptionTemplate>
            <span>Không có loại sản phẩm nào</span>
        </DescriptionTemplate>
        <ChildContent>
            <Button Type="ButtonType.Primary" OnClick="CreateLoaiSanPham">Thêm mới</Button>
        </ChildContent>
    </Empty>
}
else
{
    <Table TItem="LoaiSanPhamVM" DataSource="loaiSanPhams" RowKey="x => x.Id" Bordered="true" Size="TableSize.Small">

        <PropertyColumn Property="x => x.Id" Title="ID" />

        <PropertyColumn Property="x => x.MaLoaiSanPham" Title="Mã Loại" />

        <PropertyColumn Property="x => x.TenLoaiSanPham" Title="Tên Loại" />

        <PropertyColumn Property="x => x.GhiChu" Title="Ghi Chú" />

        <Column TData="LoaiSanPhamVM" Title="Ngày Tạo">
            <Template>@context.CreatedAt.ToString("dd/MM/yyyy HH:mm")</Template>
        </Column>

        <Column TData="LoaiSanPhamVM" Title="Ngày Cập Nhật">
            <Template>@context.UpdatedAt.ToString("dd/MM/yyyy HH:mm")</Template>
        </Column>

        <ActionColumn Title="Hành động">
            <Template>
                <Space Size="SpaceSize.Small">
                    <a href=@($"/loaisanpham/edit/{context.Id}")>
                        <Button Size="ButtonSize.Small" Type="ButtonType.Text">
                            <Icon Type="edit" Theme="IconThemeType.Outline" />
                        </Button>
                    </a>
                    <Button Size="ButtonSize.Small" Type="ButtonType.Text" Danger
                            OnClick="() => DeleteLoaiSanPham(context.Id)">
                        <Icon Type="delete" Theme="IconThemeType.Outline" />
                    </Button>
                </Space>
            </Template>
        </ActionColumn>

    </Table>
}

@code {
    private List<LoaiSanPhamVM>? loaiSanPhams;

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {
        loaiSanPhams = await Api.GetAsync<List<LoaiSanPhamVM>>("api/LoaiSanPhams");
    }

    private void CreateLoaiSanPham()
    {
        Navigation.NavigateTo("/loaisanpham/create");
    }

    private async Task DeleteLoaiSanPham(int id)
    {
        var confirm = await JS.InvokeAsync<bool>("confirm", $"Bạn có chắc muốn xóa loại sản phẩm ID {id}?");
        if (confirm)
        {
            var response = await Api.DeleteAsync($"api/LoaiSanPhams/{id}");
            if (response.IsSuccessStatusCode)
            {
                await LoadData();
            }
            else
            {
                await JS.InvokeVoidAsync("alert", $"Xóa thất bại: {response.StatusCode}");
            }
        }
    }
}
