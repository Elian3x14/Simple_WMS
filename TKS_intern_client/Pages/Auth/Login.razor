@page "/login"
@layout GuestLayout
@using TKS_intern_client.Services
@using TKS_intern_shared.ViewModels.Auth
@inject NavigationManager NavigationManager
@inject MessageService MessageService
@inject IAuthService AuthService

<PageTitle>Đăng nhập hệ thống</PageTitle>

<div class="login-container">
    <div class="login-card">
        <div class="login-logo">
            <img src="/logo.png" alt="TKS Logo" />
        </div>

        <Form Model="@loginModel" OnFinish="@HandleLogin" OnFinishFailed="HandleLoginFailed" Layout="FormLayout.Vertical">
            <DataAnnotationsValidator />
            <FormItem Label="Tên đăng nhập" Required>
                <Input @bind-Value="@loginModel.Username" Placeholder="Nhập tên đăng nhập">
                    <Prefix>
                        <Icon Type="@IconType.Outline.User" />
                    </Prefix>
                </Input>
            </FormItem>

            <FormItem Label="Mật khẩu" Required>
                <InputPassword @bind-Value="@loginModel.Password" Placeholder="Nhập mật khẩu">
                    <Prefix>
                        <Icon Type="@IconType.Outline.Lock" />
                    </Prefix>
                </InputPassword>
            </FormItem>

            <FormItem>
                <Checkbox @bind-Value="@loginModel.RememberMe">Ghi nhớ đăng nhập</Checkbox>
            </FormItem>

            <FormItem>
                <Button Type="@ButtonType.Primary" HtmlType="submit" Block 
                        Loading="@isLoading">
                    Đăng nhập
                </Button>
            </FormItem>

            <div class="login-links">
                <a href="/forgot-password">Quên mật khẩu?</a>
            </div>

            <h6>Tài khoản mẫu</h6>
            
            <div>
                <Button Type="@ButtonType.Primary" OnClick="setAdminAccount">Admin</Button>
                <Button OnClick="setStaffAccount">Staff</Button>
            </div>
        </Form>
    </div>
</div>

@code {
    private LoginVM loginModel = new();
    private bool isLoading = false;

    private async Task HandleLogin()
    {
        isLoading = true;

        try
        {
            var result = await AuthService.LoginAsync(loginModel.Username, loginModel.Password);

            if (result.Success)
            {
                // await MessageService.Success("Đăng nhập thành công!");
                Console.WriteLine("Login successful!");
                NavigationManager.NavigateTo("/");
            }
            else
            {
                // await MessageService.Error(result.Message ?? "Đăng nhập thất bại");
                Console.WriteLine($"Login failed: {result.Message ?? "Unknown error"}");
            }
        }
        catch (Exception ex)
        {
            // await MessageService.Error($"Lỗi: {ex.Message}");
            Console.WriteLine($"Error during login: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }

    private void HandleLoginFailed()
    {
        Console.WriteLine("Validation failed");
    }

    private void setAdminAccount()
    {
        loginModel.Username = "admin";
        loginModel.Password = "admin123";
    }

    private void setStaffAccount()
    {
        loginModel.Username = "staff";
        loginModel.Password = "staff123";
    }
}