@page "/nhanvien"
@using TKS_intern_client.Services
@using TKS_intern_shared.ViewModels.Users
@using TKS_intern_shared.Enums
@inject ApiClient Api
@inject NavigationManager Navigation
@inject IJSRuntime JS

<PageTitle>Nhân Viên</PageTitle>

<Breadcrumb>
    <BreadcrumbItem Href="/">Home</BreadcrumbItem>
    <BreadcrumbItem>Nhân Viên</BreadcrumbItem>
</Breadcrumb>

<Title Level="3">Danh sách Nhân Viên</Title>

<Space class="mb-3">
    <SpaceItem>
        <a href="/nhanvien/create">
            <AntDesign.Button Type="ButtonType.Primary" Icon="@IconType.Outline.Plus">
                Thêm mới
            </AntDesign.Button>
        </a>
    </SpaceItem>
</Space>

@if (users == null)
{
    <Spin Tip="Đang tải dữ liệu..." />
}
else if (!users.Any())
{
    <Empty>
        <DescriptionTemplate>
            <span>Không có nhân viên nào</span>
        </DescriptionTemplate>
        <ChildContent>
            <Button Type="ButtonType.Primary" OnClick="CreateUser">Thêm nhân viên</Button>
        </ChildContent>
    </Empty>
}
else
{
    <Table TItem="UserVM" DataSource="users" RowKey="x => x.Id" Bordered="true" Size="TableSize.Small">
        <PropertyColumn Property="x => x.Id" Title="ID" />
        <PropertyColumn Property="x => x.UserName" Title="Tên đăng nhập" />
        <PropertyColumn Property="x => x.FullName" Title="Họ tên" />
        <PropertyColumn Property="x => x.Email" Title="Email" />

        <Column TData="UserVM" Title="Vai trò">
            <Template>@context.Role.ToString()</Template>
        </Column>

        <Column TData="UserVM" Title="Hoạt động">
            <Template>
                @if (context.IsActive)
                {
                    <Tag Color="TagColor.Green">Đang hoạt động</Tag>
                }
                else
                {
                    <Tag Color="TagColor.Red">Đã khóa</Tag>
                }
            </Template>
        </Column>

        <Column TData="UserVM" Title="Lần đăng nhập cuối">
            <Template>@context.LastLoginAt?.ToString("dd/MM/yyyy HH:mm")</Template>
        </Column>

        <ActionColumn Title="Hành động">
            <Template>
                <Space Size="SpaceSize.Small">
                    <a href=@($"/nhanvien/edit/{context.Id}")>
                        <Button Size="ButtonSize.Small" Type="ButtonType.Text">
                            <Icon Type="edit" Theme="IconThemeType.Outline" />
                        </Button>
                    </a>
                    <Button Size="ButtonSize.Small" Type="ButtonType.Text" Danger
                            OnClick="() => DeleteUser(context.Id)">
                        <Icon Type="delete" Theme="IconThemeType.Outline" />
                    </Button>
                </Space>
            </Template>
        </ActionColumn>
    </Table>
}

@code {
    private List<UserVM>? users;

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {
        users = await Api.GetAsync<List<UserVM>>("api/Users");
    }

    private void CreateUser()
    {
        Navigation.NavigateTo("/nhanvien/create");
    }

    private async Task DeleteUser(int id)
    {
        var confirm = await JS.InvokeAsync<bool>("confirm", $"Bạn có chắc muốn xóa người dùng ID {id}?");
        if (confirm)
        {
            var response = await Api.DeleteAsync($"api/Users/{id}");
            if (response.IsSuccessStatusCode)
            {
                await LoadData();
            }
            else
            {
                await JS.InvokeVoidAsync("alert", $"Xóa thất bại: {response.StatusCode}");
            }
        }
    }
}
