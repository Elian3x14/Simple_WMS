@page "/sanpham"
@using TKS_intern_client.Services
@using TKS_intern_shared.ViewModels.SanPhams
@inject ApiClient Api
@inject NavigationManager Navigation
@inject IJSRuntime JS

<PageTitle>Sản Phẩm</PageTitle>

<Breadcrumb>
    <BreadcrumbItem Href="/">Home</BreadcrumbItem>
    <BreadcrumbItem>Sản Phẩm</BreadcrumbItem>
</Breadcrumb>

<Title Level="3">Danh sách Sản Phẩm</Title>

<a href="/sanpham/create">
    <AntDesign.Button Type="ButtonType.Primary" Icon="@IconType.Outline.Plus" class="mb-3">
        Thêm mới
    </AntDesign.Button>
</a>

@if (sanPhams == null)
{
    <Spin Tip="Đang tải dữ liệu..." />
}
else if (!sanPhams.Any())
{
    <Empty>
        <DescriptionTemplate>
            <span>Không có sản phẩm nào</span>
        </DescriptionTemplate>
        <ChildContent>
            <Button Type="ButtonType.Primary" OnClick="CreateSanPham">Thêm sản phẩm mới</Button>
        </ChildContent>
    </Empty>
}
else
{
    <Table TItem="SanPhamVM" DataSource="sanPhams" RowKey="x => x.Id" Bordered="true" Size="TableSize.Small">

        <PropertyColumn Property="x => x.Id" Title="ID" />
        <PropertyColumn Property="x => x.MaSanPham" Title="Mã SP" />
        <PropertyColumn Property="x => x.TenSanPham" Title="Tên SP" />
        <Column TData="SanPhamVM" Title="Loại Sản Phẩm">
            <Template>@context.LoaiSanPham?.TenLoaiSanPham</Template>
        </Column>
        <Column TData="SanPhamVM" Title="Đơn Vị Tính">
            <Template>@context.DonViTinh?.TenDonViTinh</Template>
        </Column>
        <PropertyColumn Property="x => x.GhiChu" Title="Ghi Chú" />
        <Column TData="SanPhamVM" Title="Ngày Tạo">
            <Template>@context.CreatedAt.ToString("dd/MM/yyyy HH:mm")</Template>
        </Column>
        <Column TData="SanPhamVM" Title="Ngày Cập Nhật">
            <Template>@context.UpdatedAt.ToString("dd/MM/yyyy HH:mm")</Template>
        </Column>

        <ActionColumn Title="Hành động">
            <Template>
                <Space Size="SpaceSize.Small">
                    <a href=@($"/sanpham/edit/{context.Id}")>
                        <Button Size="ButtonSize.Small" Type="ButtonType.Text">
                            <Icon Type="edit" Theme="IconThemeType.Outline" />
                        </Button>
                    </a>
                    <Button Size="ButtonSize.Small" Type="ButtonType.Text" Danger
                            OnClick="() => DeleteSanPham(context.Id)">
                        <Icon Type="delete" Theme="IconThemeType.Outline" />
                    </Button>
                </Space>
            </Template>
        </ActionColumn>

    </Table>
}

@code {
    private List<SanPhamVM>? sanPhams;

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {
        sanPhams = await Api.GetAsync<List<SanPhamVM>>("api/SanPhams");
    }

    private void CreateSanPham()
    {
        Navigation.NavigateTo("/sanpham/create");
    }

    private async Task DeleteSanPham(int id)
    {
        var confirm = await JS.InvokeAsync<bool>("confirm", $"Bạn có chắc muốn xóa sản phẩm ID {id}?");
        if (confirm)
        {
            var response = await Api.DeleteAsync($"api/SanPhams/{id}");
            if (response.IsSuccessStatusCode)
            {
                await LoadData(); // refresh danh sách
            }
            else
            {
                await JS.InvokeVoidAsync("alert", $"Xóa thất bại: {response.StatusCode}");
            }
        }
    }
}
