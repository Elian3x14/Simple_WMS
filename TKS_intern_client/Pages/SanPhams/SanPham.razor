@page "/sanpham"
@using TKS_intern_client.Services
@using TKS_intern_shared.ViewModels.SanPhams
@inject ApiClient Api
@inject NavigationManager Navigation
@inject IJSRuntime JS

<PageTitle>Sản Phẩm</PageTitle>

<h1>Danh sách Sản Phẩm</h1>

<button class="btn btn-primary mb-3" @onclick="CreateSanPham">Thêm mới</button>

@if (sanPhams == null)
{
    <p><em>Đang tải...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Mã SP</th>
                <th>Tên SP</th>
                <th>Loại Sản Phẩm</th>
                <th>Đơn Vị Tính</th>
                <th>Ghi Chú</th>
                <th>Ngày Tạo</th>
                <th>Ngày Cập Nhật</th>
                <th>Hành động</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in sanPhams)
            {
                <tr>
                    <td>@item.Id</td>
                    <td>@item.MaSanPham</td>
                    <td>@item.TenSanPham</td>
                    <td>@item.LoaiSanPham?.TenLoaiSanPham</td>
                    <td>@item.DonViTinh?.TenDonViTinh</td>
                    <td>@item.GhiChu</td>
                    <td>@item.CreatedAt.ToString("dd/MM/yyyy HH:mm")</td>
                    <td>@item.UpdatedAt.ToString("dd/MM/yyyy HH:mm")</td>
                    <td>
                        <button class="btn btn-sm btn-warning me-1" @onclick="() => EditSanPham(item.Id)">Sửa</button>
                        <button class="btn btn-sm btn-danger" @onclick="() => DeleteSanPham(item.Id)">Xóa</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<SanPhamVM>? sanPhams;

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {
        sanPhams = await Api.GetAsync<List<SanPhamVM>>("api/SanPhams");
    }

    private void CreateSanPham()
    {
        Navigation.NavigateTo("/sanpham/create");
    }

    private void EditSanPham(int id)
    {
        Navigation.NavigateTo($"/sanpham/edit/{id}");
    }

    private async Task DeleteSanPham(int id)
    {
        var confirm = await JS.InvokeAsync<bool>("confirm", $"Bạn có chắc muốn xóa sản phẩm ID {id}?");
        if (confirm)
        {
            var response = await Api.DeleteAsync($"api/SanPhams/{id}");
            if (response.IsSuccessStatusCode)
            {
                await LoadData(); // reload lại danh sách
            }
            else
            {
                Console.WriteLine($"Xóa thất bại: {response.StatusCode}");
            }
        }
    }
}
