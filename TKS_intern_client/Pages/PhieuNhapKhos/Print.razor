@page "/phieunhapkho/print/{id:int}"
@using TKS_intern_shared.ViewModels.PhieuNhapKhos
@using TKS_intern_shared.ViewModels.ChiTietPhieuNhapKhos
@using TKS_intern_client.Services
@layout PrintLayout

@inject ApiClient Api
@inject IJSRuntime JS
@inject NavigationManager Navigation

<style>
    body {
        font-family: Arial, sans-serif;
        color: #000;
        background: white;
        padding: 40px;
        font-size: 14px;
    }

    .title {
        text-align: center;
        font-weight: bold;
        font-size: 20px;
        margin-bottom: 5px;
    }

    .info {
        width: 100%;
        display: flex;
        justify-content: space-between;
        margin-bottom: 10px;
    }

    .left, .right {
        width: 48%;
    }

    .right {
        text-align: right;
        font-size: 13px;
    }

    table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 15px;
        font-size: 13px;
    }

    th, td {
        border: 1px solid #000;
        padding: 6px 4px;
        text-align: center;
    }

    th {
        background-color: #f1f1f1;
    }

    .signatures {
        display: flex;
        justify-content: space-around;
        margin-top: 50px;
        font-size: 13px;
    }

    .signature-block {
        text-align: center;
        width: 22%;
    }

    .no-print {
        margin-top: 20px;
        display: flex;
        gap: 10px;
    }

    @@media print {
        .no-print

    {
        display: none !important;
    }

    body {
        padding: 0;
    }

    }
</style>

@if (phieu == null)
{
    <p>Đang tải dữ liệu...</p>
}
else
{
    <div>
        <div class="info">
            <div class="left">
                <div><strong>Đơn vị:</strong> Công ty ABC</div>
                <div><strong>Bộ phận:</strong> Kho hàng</div>
                <div><strong>Ngày:</strong> @phieu.NgayNhapKho.ToString("dd/MM/yyyy")</div>
                <div><strong>Số phiếu:</strong> @phieu.SoPhieuNhapKho</div>
                <div><strong>Nhà cung cấp:</strong> @phieu.NhaCungCap?.TenNhaCungCap</div>
                <div><strong>Kho nhập:</strong> @phieu.Kho?.TenKho</div>
            </div>
            <div class="right">
                <div><strong>Mẫu số:</strong> 01 - VT</div>
                <div>(Ban hành theo QĐ số 15/2006/QĐ-BTC)</div>
                <div>Ngày 20/03/2006 của Bộ trưởng BTC</div>
            </div>
        </div>

        <div class="title">PHIẾU NHẬP KHO</div>

        <table>
            <thead>
                <tr>
                    <th>STT</th>
                    <th>Tên nhãn hiệu, quy cách, phẩm chất</th>
                    <th>Mã hàng</th>
                    <th>ĐVT</th>
                    <th>Số lượng</th>
                    <th>Đơn giá</th>
                    <th>Thành tiền</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var (item, index) in ChiTietPhieuNhapKhos.Select((x, i) => (x, i + 1)))
                {
                    <tr>
                        <td>@index</td>
                        <td>@item.SanPham?.TenSanPham</td>
                        <td>@item.SanPham?.MaSanPham</td>
                        <td>@item.SanPham?.DonViTinh.TenDonViTinh</td>
                        <td>@item.SoLuongNhap</td>
                        <td>@item.DonGiaNhap.ToString("N0")</td>
                        <td>@((item.SoLuongNhap * item.DonGiaNhap).ToString("N0"))</td>
                    </tr>
                }
                <tr>
                    <td colspan="4"><strong>Tổng cộng</strong></td>
                    <td><strong>@ChiTietPhieuNhapKhos.Sum(x => x.SoLuongNhap)</strong></td>
                    <td></td>
                    <td><strong>@ChiTietPhieuNhapKhos.Sum(x => x.SoLuongNhap * x.DonGiaNhap).ToString("N0")</strong></td>
                </tr>
            </tbody>
        </table>

        <div style="margin-top: 20px;">
            <strong>Tổng số tiền (viết bằng chữ):</strong>
            <i>@ToWords(ChiTietPhieuNhapKhos.Sum(x => x.SoLuongNhap * x.DonGiaNhap)) đồng</i>
        </div>

        <div style="margin-top: 20px;">
            <strong>Chứng từ gốc kèm theo:</strong> ................................................................................
        </div>

        <div class="signatures">
            <div class="signature-block">
                Người lập phiếu<br /><br /><br /><br />....................................
            </div>
            <div class="signature-block">
                Người giao hàng<br /><br /><br /><br />....................................
            </div>
            <div class="signature-block">
                Thủ kho<br /><br /><br /><br />....................................
            </div>
            <div class="signature-block">
                Kế toán trưởng<br /><br /><br /><br />....................................
            </div>
        </div>

        <div class="no-print">
            <button @onclick="PrintPage">In phiếu</button>
            <button @onclick="Back">Quay lại</button>
        </div>
    </div>
}

@code {
    [Parameter] public int id { get; set; }

    private PhieuNhapKhoVM? phieu;
    private List<ChiTietPhieuNhapKhoVM> ChiTietPhieuNhapKhos = new();

    protected override async Task OnInitializedAsync()
    {
        phieu = await Api.GetAsync<PhieuNhapKhoVM>($"api/PhieuNhapKhos/{id}");
        var chiTiet = await Api.GetAsync<List<ChiTietPhieuNhapKhoVM>>($"api/ChiTietPhieuNhapKhos/phieuNhapKho/{id}");
        if (chiTiet != null)
        {
            ChiTietPhieuNhapKhos = chiTiet;
        }
    }

    private async Task PrintPage()
    {
        await JS.InvokeVoidAsync("window.print");
    }

    private void Back()
    {
        Navigation.NavigateTo("/phieunhapkho/detail/" + id);
    }

    private static readonly string[] ChuSo = { "không", "một", "hai", "ba", "bốn", "năm", "sáu", "bảy", "tám", "chín" };
    private static readonly string[] DonVi = { "", "nghìn", "triệu", "tỷ" };

    private string ToWords(decimal number)
    {
        if (number == 0)
            return "Không đồng";

        var s = ((long)Math.Floor(number)).ToString();
        var groups = new List<string>();

        while (s.Length > 0)
        {
            int len = s.Length >= 3 ? 3 : s.Length;
            groups.Insert(0, s.Substring(s.Length - len, len));
            s = s.Remove(s.Length - len, len);
        }

        string result = "";
        for (int i = 0; i < groups.Count; i++)
        {
            string group = groups[i];
            int groupIndex = groups.Count - i - 1;
            string groupText = DocBaSo(group);
            if (!string.IsNullOrEmpty(groupText))
            {
                result += groupText + " " + DonVi[groupIndex] + " ";
            }
        }

        result = result.Trim();
        result = char.ToUpper(result[0]) + result.Substring(1);
        return result;
    }

    private string DocBaSo(string so)
    {
        while (so.Length < 3)
            so = "0" + so;

        int tram = int.Parse(so[0].ToString());
        int chuc = int.Parse(so[1].ToString());
        int donVi = int.Parse(so[2].ToString());

        string result = "";

        if (tram > 0)
        {
            result += ChuSo[tram] + " trăm";
            if (chuc == 0 && donVi > 0)
                result += " linh";
        }
        else if (chuc > 0 || donVi > 0)
        {
            result += "không trăm";
            if (chuc == 0 && donVi > 0)
                result += " linh";
        }

        if (chuc > 1)
        {
            result += " " + ChuSo[chuc] + " mươi";
            if (donVi == 1)
                result += " mốt";
            else if (donVi == 5)
                result += " lăm";
            else if (donVi > 0)
                result += " " + ChuSo[donVi];
        }
        else if (chuc == 1)
        {
            result += " mười";
            if (donVi == 1)
                result += " một";
            else if (donVi == 5)
                result += " lăm";
            else if (donVi > 0)
                result += " " + ChuSo[donVi];
        }
        else if (chuc == 0 && donVi > 0)
        {
            result += " " + ChuSo[donVi];
        }

        return result.Trim();
    }

}
